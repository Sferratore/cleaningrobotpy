[
  {
    "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/5",
    "repository_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy",
    "labels_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/5/labels{/name}",
    "comments_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/5/comments",
    "events_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/5/events",
    "html_url": "https://github.com/sromano-courses/cleaningrobotpy/issues/5",
    "id": 2652500736,
    "node_id": "I_kwDONNlXfs6eGfMA",
    "number": 5,
    "title": "User Story #5 -- Robot Recharge",
    "user": {
      "login": "sromano87",
      "id": 11738038,
      "node_id": "MDQ6VXNlcjExNzM4MDM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11738038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sromano87",
      "html_url": "https://github.com/sromano87",
      "followers_url": "https://api.github.com/users/sromano87/followers",
      "following_url": "https://api.github.com/users/sromano87/following{/other_user}",
      "gists_url": "https://api.github.com/users/sromano87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sromano87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sromano87/subscriptions",
      "organizations_url": "https://api.github.com/users/sromano87/orgs",
      "repos_url": "https://api.github.com/users/sromano87/repos",
      "events_url": "https://api.github.com/users/sromano87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sromano87/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 7730926759,
        "node_id": "LA_kwDONNlXfs8AAAABzMyUpw",
        "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-11-12T15:19:04Z",
    "updated_at": "2024-11-12T15:41:18Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Before executing a command to move the robot (User Story #3), the robot checks the charge left in the battery by querying the IBS (User Story #2). When the charge left returned by the IBS is equal to or less than 10%, the robot turns off the cleaning system, turns on the recharging LED, and stays still (i.e., the robot does not move whatever the command it receives). In this case, it returns a string containing the status of the rover preceded by an exclamation mark.\r\n\r\n**Requirement:**\r\n- Update the implementation of `CleaningRobot.execute_command(command: str) -> str` to manage the behavior associated with the charge left.\r\n\r\n**Example:**\r\n- Let us suppose there is not enough charge left and the status of the robot is _(1,1,N)_. If the robot receives the command _f_, it does not move and returns the following string: _!(1,1,N)_ \r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/5/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/5/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/4",
    "repository_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy",
    "labels_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/4/comments",
    "events_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/4/events",
    "html_url": "https://github.com/sromano-courses/cleaningrobotpy/issues/4",
    "id": 2652060762,
    "node_id": "I_kwDONNlXfs6eEzxa",
    "number": 4,
    "title": "User Story #4 -- Obstacle Detection",
    "user": {
      "login": "sromano87",
      "id": 11738038,
      "node_id": "MDQ6VXNlcjExNzM4MDM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11738038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sromano87",
      "html_url": "https://github.com/sromano87",
      "followers_url": "https://api.github.com/users/sromano87/followers",
      "following_url": "https://api.github.com/users/sromano87/following{/other_user}",
      "gists_url": "https://api.github.com/users/sromano87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sromano87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sromano87/subscriptions",
      "organizations_url": "https://api.github.com/users/sromano87/orgs",
      "repos_url": "https://api.github.com/users/sromano87/repos",
      "events_url": "https://api.github.com/users/sromano87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sromano87/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 7730926759,
        "node_id": "LA_kwDONNlXfs8AAAABzMyUpw",
        "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-11-12T12:35:16Z",
    "updated_at": "2024-11-12T15:14:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "While executing a command (User Story #3), the robot can encounter an obstacle in a cell;  the robot uses the infrared distance sensor to determine if there is an obstacle in front of it and thus avoid bumping into that obstacle. If an obstacle is detected, the robot cannot move beyond the obstacle; it will instead return a string containing its status and the position of the encountered obstacle. This string is formatted as follows: _(x,y,h)(xo,yo)_. The triple _(x,y,h)_ represents the status of the robot while the pair _(xo,yo)_ represents the position of the encountered obstacle.\r\n\r\nThe infrared distance sensor is connected to pin 15 (BOARD mode). The communication with the sensor happens via the `GPIO.input(channel)` function (where `channel` is the pin). Specifically, this function returns `True` if there is an obstacle in front of the robot, `False` otherwise.\r\n\r\n**Requirement:**\r\n- Implement `CleaningRobot.obstacle_found() -> bool` to verify whether or not the infrared distance sensor detects an obstacle in front of the robot.\r\n- Update the implementation of `CleaningRobot.execute_command(command: str) -> str` to include the obstacle detection.\r\n\r\n**Example:**\r\n- Let us suppose there is an obstacle in the room at coordinates _(0,1)_ (see the figure below). The robot with initial status _(0,0,N)_, after executing the command string _f_, returns the following string: _(0,0,N)(0,1)_.\r\n\r\n![image](https://github.com/user-attachments/assets/dc8e90a1-9a09-4c83-9195-2f5fe43143f3)\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/4/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/4/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/3",
    "repository_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy",
    "labels_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/3/labels{/name}",
    "comments_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/3/comments",
    "events_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/3/events",
    "html_url": "https://github.com/sromano-courses/cleaningrobotpy/issues/3",
    "id": 2651860020,
    "node_id": "I_kwDONNlXfs6eECw0",
    "number": 3,
    "title": "User Story #3 -- Robot Movement",
    "user": {
      "login": "sromano87",
      "id": 11738038,
      "node_id": "MDQ6VXNlcjExNzM4MDM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11738038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sromano87",
      "html_url": "https://github.com/sromano87",
      "followers_url": "https://api.github.com/users/sromano87/followers",
      "following_url": "https://api.github.com/users/sromano87/following{/other_user}",
      "gists_url": "https://api.github.com/users/sromano87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sromano87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sromano87/subscriptions",
      "organizations_url": "https://api.github.com/users/sromano87/orgs",
      "repos_url": "https://api.github.com/users/sromano87/repos",
      "events_url": "https://api.github.com/users/sromano87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sromano87/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 7730926759,
        "node_id": "LA_kwDONNlXfs8AAAABzMyUpw",
        "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-11-12T11:12:23Z",
    "updated_at": "2024-11-12T14:50:07Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "To move into the room, the robot receives a command (i.e., a string) from the RMS. When this happens, the robot controls the wheel motor and the rotation motor in order to execute the command, then updates its status (see User Story #1), and finally returns a string (representing its new status) to the RMS.\r\n\r\nThe robot moves one cell forward when it receives the command _f_. If the robot receives the command _r_ or _l_, it turns right or left respectively – i.e., it rotates clockwise or counterclockwise 90° around itself. The robot cannot move backward.\r\n\r\nThe two motors that control, respectively, the wheels and the rotation of the robot are DC motors. They have already been set up in the constructor of the `CleaningRobot` class. To control the motors, use the following two methods (already implemented):\r\n- `CleaningRobot.activate_wheel_motor() -> None`, which activates the wheel motor to let the robot move forward.\r\n- `CleaningRobot.activate_rotation_motor(direction: str) -> None`, which activates the rotation motor to let the robot turn left or right based on a string representing the direction (i.e., _l_ to turn left, _r_ to turn right).\r\n\r\n**Requirement:**\r\n- Implement `CleaningRobot.execute_command(command: str) -> str` to execute the command passed by the RMS (i.e., _f_, _l_, or _r_), update the status of the robot, and then return a string representing the new status of the robot.\r\n\r\n**Examples:**\r\n- If the robot status is _(0,0,N)_ and it receives the command _f_, the robot moves one cell forward – i.e., the robot controls the wheel motor in order to move one cell forward – and returns the new status _(0,1,N)_. \r\n- If the robot status is _(0,0,N)_ and it receives the command _r_, the robot rotates clockwise 90° – i.e., the robot controls the rotation motor in order to rotate 90° – and returns the new status _(0,0,E)_. Similarly, if it receives the command string _l_, the robot rotates counter 90° and returns the new status _(0,0,W)_.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/3/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/3/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/2",
    "repository_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy",
    "labels_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/2/labels{/name}",
    "comments_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/2/comments",
    "events_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/2/events",
    "html_url": "https://github.com/sromano-courses/cleaningrobotpy/issues/2",
    "id": 2651661420,
    "node_id": "I_kwDONNlXfs6eDSRs",
    "number": 2,
    "title": "User Story #2 -- Cleaning System Management",
    "user": {
      "login": "sromano87",
      "id": 11738038,
      "node_id": "MDQ6VXNlcjExNzM4MDM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11738038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sromano87",
      "html_url": "https://github.com/sromano87",
      "followers_url": "https://api.github.com/users/sromano87/followers",
      "following_url": "https://api.github.com/users/sromano87/following{/other_user}",
      "gists_url": "https://api.github.com/users/sromano87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sromano87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sromano87/subscriptions",
      "organizations_url": "https://api.github.com/users/sromano87/orgs",
      "repos_url": "https://api.github.com/users/sromano87/repos",
      "events_url": "https://api.github.com/users/sromano87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sromano87/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 7730926759,
        "node_id": "LA_kwDONNlXfs8AAAABzMyUpw",
        "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-11-12T09:56:05Z",
    "updated_at": "2024-11-12T16:40:14Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The robot checks how much charge is left in the battery by querying the IBS. If the charge left returned by the IBS is greater than 10%, the robot turns on the cleaning system and turns off the recharging LED. When the charge left is equal to or less than 10%, the robot turns on the recharging LED and turns off the cleaning system.\r\n\r\nThe communication with the IBS happens via the IC2 protocol. To get the charge left as read from the IBS, access the instance variable `CleaningRobot.ibs` and then the method `IBS.get_charge_left(self) -> int` (which returns the charge left in the battery, expressed as a percentage value). Note that the IBS has already been configured in the constructor of the `CleaningRobot` class.\r\n\r\nThe recharge LED is connected to pin 12 (BOARD mode), while the cleaning system is connected to pin 13 (BOARD mode). The communication with the LED or the cleaning system happens via the `GPIO.output(channel, value)` function where `channel` is the pin and `value` is `False | True`. Note that the LED and the cleaning system have already been configured in the constructor of the `CleaningRobot` class.\r\n\r\nFinally, to keep track of the statuses (i.e., on vs off) of the LED and the cleaning system, use the boolean instance variables `SmartRoom.recharge_led_on` and `SmartRoom.cleaning_system_on`, respectively.\r\n\r\n**Requirement:**\r\n- Implement `CleaningRobot.manage_cleaning_system(self) -> None` to manage the behavior related to the cleaning system (and recharging LED).\r\n\r\n**Tip:**\r\n- If you need to verify that more calls to the same function (or method) have taken place with certain arguments, use `Mock.assert_has_calls(calls, any_order)`.\r\n",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/2/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/2/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/1",
    "repository_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy",
    "labels_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/1/labels{/name}",
    "comments_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/1/comments",
    "events_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/1/events",
    "html_url": "https://github.com/sromano-courses/cleaningrobotpy/issues/1",
    "id": 2651506497,
    "node_id": "I_kwDONNlXfs6eCsdB",
    "number": 1,
    "title": "User Story #1 -- Robot Positioning",
    "user": {
      "login": "sromano87",
      "id": 11738038,
      "node_id": "MDQ6VXNlcjExNzM4MDM4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11738038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sromano87",
      "html_url": "https://github.com/sromano87",
      "followers_url": "https://api.github.com/users/sromano87/followers",
      "following_url": "https://api.github.com/users/sromano87/following{/other_user}",
      "gists_url": "https://api.github.com/users/sromano87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sromano87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sromano87/subscriptions",
      "organizations_url": "https://api.github.com/users/sromano87/orgs",
      "repos_url": "https://api.github.com/users/sromano87/repos",
      "events_url": "https://api.github.com/users/sromano87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sromano87/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 7730926759,
        "node_id": "LA_kwDONNlXfs8AAAABzMyUpw",
        "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-11-12T08:59:11Z",
    "updated_at": "2024-11-12T14:25:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The robot has a status, namely a string (without white spaces) formatted as follows: _(x,y,h)_. The pair _(x,y)_ represents the position of the robot in the room (in terms of _x_ and _y_ coordinates) while _h_ is the heading – i.e., the direction the robot is pointing to. The heading can be: _N_ (North), _S_ (South), _E_ (East), or _W_ (West). The robot assumes the North is parallel to the _y_-axis. The robot starts its duty from the origin position—i.e., the position with coordinates _(0,0)_, facing North (see the figure below).\r\n\r\n![image](https://github.com/user-attachments/assets/c432dd89-0df0-4a60-9b80-3a2cbf1d8b39)\r\n\r\n**Requirement:**\r\n- Implement `CleaningRobot.initialize_robot(self) -> None` to set the status of the robot to _(0,0,N)_. To do so, use the instance variables `CleaningRobot.pos_x`, `CleaningRobot.pos_y`, and `CleaningRobot.heading`.\r\n- Implement `CleaningRobot.robot_status(self) -> str` to return the current status of the robot – i.e., a string in the format _(x,y,h)_.\r\n\r\n**Example:**\r\n- The robot status _(0,0,N)_ indicates that the robot lies in the cell with _x_ and _y_ coordinates both equal to 0. The heading of the robot is _N_ – i.e., it is pointing to North.",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/1/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/sromano-courses/cleaningrobotpy/issues/1/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  }
]
